# -*- mode: org ; coding: utf-8-unix -*-
# last updated : 2014/11/10.02:28:14


#+TITLE:     LLVM Build Shell
#+AUTHOR:    yaruopooner
#+EMAIL:     [https://github.com/yaruopooner]
#+OPTIONS:   author:nil timestamp:t |:t \n:t ^:nil


* 使用方法
  llvm-builder.ps1が本体です。
  sample.ps1が呼び出しサンプルです。

* セルフビルドに必要なソフトウェア
  以下が必要になります。
** Visual Studio 2013/2012/2010
   どれでもOK

** Subversion
   http://tortoisesvn.net/

   ソリューションビルド時にsvnコマンドラインが呼び出されるのでTortoiseSVNにパスが通っている必要がある。
   checkout/updateだけならcygwinのsvnで可能だがお勧めしない。
   svnを呼び出してリビジョンナンバーなどを埋め込んだヘッダファイルを生成したりするが
   cygwinのsvnだとパス解釈が正しく実行されない場合がありビルド時に該当ファイルがないといわれてしまうケースがある。
   なのでcygwinのshellなどから実行しないほうがよい。

** cmake
   http://www.cmake.org/

   Windows ZIPをダウンロードして何処かへ展開。
   Visual Studio ソリューション＆プロジェクトファイル生成と、カスタムビルドステップ時のスクリプト実行で使用される。
   Windows Sourceのほうはおすすめしない。
   自前ビルドしたところ、なぜかジェネレーターにVisual Studio系がなかった。なぜ？
	
** python 2.7.x
   http://www.python.org/
   http://www.python.org/download/

   Python 2.7.x Windows X86-64 Installer を使用
   3.x 系は使用しない。
   cmake で LLVMのソリューションファイルを生成する際に必要。

** GnuWin32
   http://gnuwin32.sourceforge.net/
   http://sourceforge.net/projects/getgnuwin32/files/

   カスタムビルドステップで使用される。
   grepなどを使用している模様。

   PATHに GnuWin32/bin を設定する場合は最後尾にしてパス検索順の最後にする。
   Visual Studio GUIからビルドする場合はシステム環境変数のPATHへ追加しておく必要がある。
   環境変数を汚したくない場合はMSBuildでビルドするのがよい。
   MSBuildの場合は、ビルド実行直前に GnuWin32/bin にパスを通せばよいので、
   呼び出しbat内でset PATH=c:\GnuWin32\bin;%PATH%
   などとしておけばよい。




